---
interface item {
  platform: string
  icon: string
  color?: string
  link?: string
  text: string
  api?: string
  count?: number
}
const stats: item[] = [
  {
    platform: 'GitHub',
    icon: 'social.svg#mingcute-github-line',
    link: 'https://github.com/cworld1',
    text: 'followers',
    api: 'github/cworld1'
  },
  {
    platform: 'Telegram',
    icon: 'social.svg#mingcute-telegram-line',
    color: '#2ca5e0',
    link: 'https://t.me/cworld0_cn',
    text: 'subscribers',
    api: 'telegram/cworld0_cn'
  },
  {
    platform: 'Coolapk',
    icon: 'social.svg#coolapk-line',
    color: '#11ab60',
    link: 'https://www.coolapk.com/u/1384771',
    text: 'fans',
    // api: 'coolapk/1384771',
    count: 6393
  },
  {
    platform: 'Bilibili',
    icon: 'social.svg#ri-bilibili-line',
    color: '#fe7398',
    link: 'https://space.bilibili.com/388346465',
    text: 'fans',
    // api: 'bilibili/388346465',
    count: 55
  },
  {
    platform: 'Twitter',
    icon: 'social.svg#mingcute-twitter-line',
    color: '#1da1f2',
    link: 'https://twitter.com/CWorld0',
    text: 'followers',
    // api: 'twitter/cworld0',
    count: 34
  },
  {
    platform: 'Weibo',
    icon: 'copyright-sponsor.svg#mingcute-weibo-line',
    color: '#e71f19',
    link: 'https://weibo.com/cworld0',
    text: 'followers',
    api: 'weibo/5501674056'
  },
  {
    platform: 'Zhihu',
    icon: 'social.svg#ri-zhihu-line',
    color: '#0084ff',
    link: 'https://www.zhihu.com/people/wolf-03/answers',
    text: 'followers',
    api: 'zhihu/wolf-03'
  },
  {
    platform: 'Steam',
    icon: 'social.svg#ri-steam-line',
    color: '#50769d',
    link: 'https://steamcommunity.com/id/cworld',
    text: 'games',
    api: 'steamgames/76561199021278120'
  }
]

async function fetchCount(item: item) {
  if (!item.api) return
  const response = await fetch(`https://api.swo.moe/stats/${item.api}`)
  const data = await response.json()
  if (data.failed) {
    console.error(data.message)
  } else {
    item.count = data.count
  }
}

for (let item of stats) {
  await fetchCount(item)
}
---

<div class='grid grid-cols-1 gap-3 rounded-xl border p-2 sm:grid-cols-2 sm:p-3'>
  {
    stats.map(({ link, platform, icon, color, count, text }) => (
      <a
        class='group text-muted-foreground no-underline'
        href={link}
        target='_blank'
        rel='noopener noreferrer'
      >
        <div class='flex items-center gap-3 rounded-lg border border-transparent px-3 py-2 transition-all hover:border-border hover:bg-muted '>
          {icon && (
            <svg
              class='size-6'
              style={{ color: color ? color : 'hsl(var(--foreground) / var(--tw-text-opacity))' }}
            >
              <use href={`/icons/${icon}`} />
            </svg>
          )}
          <div class='flex-1 text-foreground transition-colors group-hover:text-primary'>
            {platform}
          </div>
          {count ? (
            <div class='flex items-center gap-1.5'>
              <samp>{count}</samp>
              <span class='text-sm font-normal'>{text}</span>
            </div>
          ) : (
            'null'
          )}
        </div>
      </a>
    ))
  }
</div>
<div class='mt-2 text-right text-sm'>
  Display real-time; powered by <a
    class='text-muted-foreground'
    href='http://github.com/spencerwooo/substats'
    target='_blank'
    rel='noopener noreferrer'>Substats</a
  >
</div>
